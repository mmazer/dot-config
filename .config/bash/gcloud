alias gc='gcloud'
alias gce='gcloud compute'
alias gce-machines='gcloud compute machine-types list'

gp() {
    local project=$1
    if [ -z "$project" ]; then
        gcloud config get-value project
    else
        gcloud config set project "$project"
    fi
}

gi() {
    if [ -n "$1" ]; then
        gcloud container images list --repository gcr.io/$1
    else
        echo "repository not specified"
    fi
}

gtags() {
    if [ -n "$1" ]; then
        gcloud container images list-tags gcr.io/$1
    else
        echo "project image not specified"
    fi
}

alias gke='gcloud container'
alias gke_creds='gcloud container clusters get-credentials'

kcl() {
    local zone=$1
    if [ -z "$zone" ]; then 
        echo "error: no zone specified"
    else
        gcloud container clusters list --zone=$zone
    fi
}

kpool() {
    local zone=$1
    local cluster=$2
    if [ $# -ne 2 ]; then
        echo "error: zone and cluster name not specified"
    else
        gcloud container node-pools list --zone $zone --cluster $cluster
    fi
}

kluster() {
    local cluster=$1
    if [ -z "$cluster" ]; then
        echo "error: no cluster specified"
    else
        gcloud container clusters get-credentials $cluster
    fi
}

gcf() {
    local active
    local selected
    active="$(gcloud config configurations list --format='csv[no-heading](name)' \
                                            --filter='is_active=True')"
    if [ -z "$active" ]; then
      active="default"
    fi
    echo "Active configuration: $active"

    selected=$(gcloud config configurations list --format='csv[no-heading](name)' --filter="name!=$active" | xargs -n1 \
      | fzf -0 -1 --tac -q "${1:-""}" --preview "gcloud config configurations describe {}" )

    if [ -n "$selected" ]; then
        gcloud config configurations activate "$selected"
    fi
}
