# The next line updates PATH for the Google Cloud SDK.
if [ -f '/usr/local/google-cloud-sdk/path.bash.inc' ]; then source '/usr/local/google-cloud-sdk/path.bash.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/usr/local/google-cloud-sdk/completion.bash.inc' ]; then source '/usr/local/google-cloud-sdk/completion.bash.inc'; fi

if [ -x "$(command -v gcloud)" ]; then
alias gc='gcloud'
alias gce='gcloud compute'
alias gce-machines='gcloud compute machine-types list'
alias gke='gcloud container'
alias gke_creds='gcloud container clusters get-credentials'
alias gssh='gcloud compute ssh'
alias gsu=gsutil
alias gsl='gsutil ls'
alias clouds='open https://status.cloud.google.com/'

putc gcp/project $(gcloud config get-value project)

__gcp_prompt() {
    echo $(getc gcp/project)
}

export __OLD_PS1=$PS1
export PS1="_gcp_prompt __$OLD_PS1"

gp() {
    local project=$1
    if [ -z "$project" ]; then
        putc gcp/project $(gcloud config get-value project)
        getc gcp/project
    else
        echo "setting active GCP project to $project"
        gcloud config set project "$project"
        gcloud container clusters get-credentials application-cluster
        putc gcp/project $(gcloud config get-value project)
    fi
}

gi() {
    if [ -n "$1" ]; then
        gcloud container images list --repository gcr.io/$1
    else
        echo "repository not specified"
    fi
}

gtags() {
    if [ -n "$1" ]; then
        gcloud container images list-tags gcr.io/$1
    else
        echo "project image not specified"
    fi
}


klusters() {
    local zone=$1
    if [ -z "$zone" ]; then
        echo "error: no zone specified"
    else
        gcloud container clusters list --zone=$zone
    fi
}

kpool() {
    local zone=$1
    local cluster=$2
    if [ $# -ne 2 ]; then
        echo "error: zone and cluster name not specified"
    else
        gcloud container node-pools list --zone $zone --cluster $cluster
    fi
}

fi # gcloud command is available
