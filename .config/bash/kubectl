# vim: ft=sh :

usage() {
  echo "usage: $1"
}

kp(){
    if [ -z "$1" ]; then
        kubectl get pods
    else
       kubectl get pod/$1 -o yaml
    fi
}

kd() {
    if [ -z "$1" ]; then
        kubectl get deployments
    else
        kubectl get deployment/$1 -o yaml
    fi
}

km() {
    if [ -z "$1" ]; then
        kubectl get configmaps
    else
        kubectl get configmap/$1 -o yaml
    fi
}

kshell() {
    if [ $# -ne 2 ]; then
        echo "kshell <image> <name>"
    else
        kubectl run -i --rm --tty $2 --image="$1"  --restart=Never -- bash
    fi
}

ktools() {
    local name image
    name=${USER}-toolbox
    image=${TOOLBOX_DOCKER_IMAGE:-gcr.io/google-containers/toolbox}
    namespace=${K8_NAMESPACE:-default}
    echo "Running pod $name using image $image in namespace $namespace"
    kubectl run -i --rm --tty "$name" --image="$image" --restart=Never --namespace=${K8_NAMESPACE} -- bash
}


# restart pods for deployments, statefulsets and daemonsets
restart() {
    local resource=$1
    if [ -z "$resource" ]; then
        echo "restart <resource>"
    else
        kubectl patch $resource -p "{\"spec\": {\"template\": {\"metadata\": { \"labels\": {  \"restarted-at\": \"$(date +%s)\"}}}}}"
    fi
}


ksuspend() {
    if [ $# -ne 1 ]; then
        echo "usage: ksuspend <job"
    else
        local job=$1
        kubectl patch cronjobs $job -p '{"spec" : {"suspend" : true }}'
    fi

}

alias kube='kubectl'
alias kk='kubectl'
alias kdesc='kubectl describe'
alias kget='kubectl get'
alias kgety='kubectl get -o yaml'
alias kpf="kubectl port-forward"
alias kdel='kubectl delete'
alias kexpl='kubectl explain'
alias kubeapi='kubectl api-resources'

export TOOLBOX_DOCKER_IMAGE="gcr.io/google-containers/toolbox"
