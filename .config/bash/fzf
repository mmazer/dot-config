export FZF_DEFAULT_COMMAND='rg --no-messages --files --hidden --follow --glob "!.git/*"'

[ -f $HOME/.fzf.bash  ] && source $HOME/.fzf.bash

# File browser:
#   - CTRL-O to open with `open` command,
#   - CTRL-E or Enter key to open with the $EDITOR
ctrlp() {
  local out file key
  out=$(fzf-tmux --query="$1" --exit-0 --expect=ctrl-o,ctrl-e)
  key=$(head -1 <<< "$out")
  file=$(head -2 <<< "$out" | tail -1)
  if [ -n "$file" ]; then
    [ "$key" = ctrl-o ] && __open "$file" || ${EDITOR:-nvim} "$file"
  fi
}

bind -x '"\C-f": ctrlp;'

# fdir - cd to selected directory
fdir() {
  local dir
  dir=$(ls -1F| grep /$ | fzf +m ) && 
  cd "$dir"
}

# repeat command history
fh() {
  eval $( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf +s --tac | sed 's/ *[0-9]* *//')
}

# fhe - repeat history edit
fhe() {
  local cmd
  cmd=$( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf +s --tac | awk '{print $1}')
  fc $cmd 
}

# browse shell functions (bash)
fun() {
  f=$(declare -F | awk '{print $3 }' | fzf)
  declare -f $f | $PAGER
}

# ge - fuzzy find git files and open in editor
ged() {
  local files file
  files=$(git ls-files) &&
  file=$(echo "$files" | fzf +s) &&
  [[ -n "$file" ]] && ${EDITOR:-nvim} "${file}"
}

# checkout git branch
gb() {
  local branches branch
  branches=$(git branch -vv) &&
  branch=$(echo "$branches" | fzf +m) &&
  git checkout $(echo "$branch" | awk '{print $1}' | sed "s/.* //")
}

# git commit browser
gcb() {
  git log --graph --color=always \
      --format="%C(auto)%h%d %s %C(black)%C(bold)%cr" "$@" |
  fzf --ansi --no-sort --reverse --tiebreak=index --bind=ctrl-s:toggle-sort \
      --bind "ctrl-m:execute:
                (grep -o '[a-f0-9]\{7\}' | head -1 |
                xargs -I % sh -c 'git show --color=always % | less -R') << 'FZF-EOF'
                {}
FZF-EOF"
}

# fst - git stashes
gst() {
  local stashes stash
  stashes=$(git stash list) &&
  stash=$(echo "$stashes" | fzf +m) &&
  git show $(echo $stash | awk -F":" '{printf $1}')
}

# get git commit sha
# example usage: git rebase -i `gsha`
gsha() {
  local commits commit
  commits=$(git log --color=always --pretty=oneline --abbrev-commit --reverse) &&
  commit=$(echo "$commits" | fzf --tac +s +m -e --ansi --reverse) &&
  echo -n "$commit" | awk '{printf $1}'
}

# goto to bookmarked directory
cdb() {
    local bookmark
    bookmark=$(cat $XDG_DATA_HOME/bookmarks/dirs | awk '{ printf "%s\n", $2}' FS=\| | fzf)
    [[ -n "$bookmark" ]] && bookmarkjump "$bookmark" && pwd
}

bind -x '"\C-g": cdb;'

# fcmd - search and run saved cmds
fcmd() {
    args=$@
    cmds="${args:-$XDG_DATA_HOME/commands}"
    out=$(cat ${cmds} | fzf --expect=ctrl-y| sed -e "s/;;.*//" -e "s/[ ]*$//")
    key=$(head -1 <<< "$out")
    cmd=$(head -2 <<< "$out" | tail -1)
    [ "$key" = ctrl-y ] && echo -n "$cmd" | pbcopy  || eval "$cmd"
}

gob() {
    local bookmarks url
    args=$@
    bookmarks="${args:-$XDG_DATA_HOME/bookmarks/www}"
    url=$(cat ${bookmarks} | fzf | awk 'BEGIN { FS = "|" } ; { printf $2 }')
    [[ -n "$url" ]] && __open "$url"
}
bind -x '"\C-b": gob;'
