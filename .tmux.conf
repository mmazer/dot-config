set -g prefix C-a
set -g default-terminal "screen-256color"
set -g default-command "reattach-to-user-namespace-wrapper -l ${SHELL}"
set-option -g update-environment "TERM_THEME TERM_BG"

set -sg escape-time 0

# use starting index 1 for windows and panes
set -g base-index 1
setw -g pane-base-index 1
set -g display-panes-time 2000 

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

# history
set-option -g history-limit 3000

# mouse
set-window-option -g mouse off

# window Splitting
unbind %
bind | split-window -h
bind - split-window -v

# vim like bindings
# use "v" and "s" to do vertical/horizontal splits, like vim
bind s split-window -v
bind v split-window -h

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# cycle through windows
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# move windows
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# use vim motion keys while in copy mode
setw -g mode-keys vi

# reload tmux conf
bind r source-file ~/.tmux.conf \; display "configuration reloaded"

# misc key bindings
bind C-a send-prefix
bind K confirm kill-window

# restore bash completion
unbind -n Tab

# use the vim resize keys.
# the number at the end is how much the pane will be resized,
# and 1 is fairly small -- you might want to tweak this.
bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 10
bind + resize-pane -U 10

### layout and colors

# See https://github.com/tmux/tmux/wiki/FAQ#how-do-i-translate--fg--bg-and--attr-options-into--style-options

# https://github.com/tmux/tmux/issues/1689
# message-command-style style
# message-style style
# mode-style style
# pane-active-border-style style
# pane-border-style style
# status-left-style style
# status-right-style style
# status-style style
# window-active-style style
# window-status-activity-style style
# window-status-bell-style style
# window-status-current-style style
# window-status-last-style style
# window-status-style style
# window-style style

# modes {
setw -g clock-mode-colour colour244
setw -g mode-style fg=colour196,bg=colour238,bold
# }

# panes {
set -g pane-border-style fg=colour235,bg=colour238
set -g pane-active-border-style fg=colour51,bg=colour236
# }

# statusbar {
set -g status-position bottom
set -g status-justify centre
set -g status-interval 2
set -g status-style fg=colour247,bg=colour234,dim
set -g status-left '#S@#h'
set -g status-right '#(date "+%b %d %%H:%%M:%%S") (UTC #(TZ="UTC" date +%%H:%%M))'
set -g status-right-length 40
set -g status-left-length 40

setw -g window-status-current-style fg=colour253
setw -g window-status-current-format '#I #W:#P'

setw -g window-status-style none
setw -g window-status-format '#I:#W #F'

setw -g window-status-bell-style fg=colour255,bg=colour1,bold
# }

# messages {
set -g message-style fg=black,bg=yellow
set -g message-command-style fg=blue,bg=black
# }
