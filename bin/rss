#!/bin/bash

usage () {
    sed -e 's/^//' <<End
Usage: rss [-ld:e:h] [-p script-file] script-file
Run shell scripts
-d specify script directory
-l list scripts
-e edit script file
-p print script file
-h show help
End
    exit 1
}

quit () {
    exit 0
}

list_scripts () {
    find "$RSS_SCRIPTS_LIB" -type f -printf "%P\n"| sort
}

print_script() {
    cat "$RSS_SCRIPTS_LIB/$1"
}

edit_script() {
    ${EDITOR:-nvim} "$RSS_SCRIPTS_LIB/$1"
}

run_script() {
    script_file="${RSS_SCRIPTS_LIB}/$1"
    if [ ! -f "$script_file" ]; then
        echo "script file not found $1"
        exit 1
    fi
    . "$script_file"
}

RSS_HOME="${RSS_HOME:-$HOME/.local/share/rss.d}"
export RSS_HOME

RSS_SCRIPTS_LIB="${RSS_HOME}/lib"
export RSS_SCRIPTS_LIB

RSS_LIBEXEC="${RSS_HOME}/libexec"
export RSS_LIBEXEC

while getopts ld:he:p: opt
do case "$opt" in
    h) usage;;
    d) RSS_SCRIPTS_LIB="$OPTARG";;
    e) edit_script "$OPTARG" && quit;;
    l) list_scripts && quit;;
    p) print_script "$OPTARG" && quit;;
    esac
done
shift $((OPTIND-1))

if [ "$#" -eq 0 ]; then
    [[ "$(command -v fzf)" ]] || { echo "fzf is not installed" 1>&2 ; usage; }
    out=$(find "$RSS_SCRIPTS_LIB" -type f -printf "%P\n" | fzf --expect=ctrl-e,ctrl-p)
    key=$(head -1 <<< "$out")
    file=$(head -2 <<< "$out" | tail -1)
    case $key in
        ctrl-e) 
            edit_script $file;;
        ctrl-p)
            print_script $file;;
        *) 
            if [ -n "$file" ]; then run_script "$file";  fi;;
    esac
    quit
fi

run_script "$1"

