#! /bin/bash
# Short-Description: Basic script to connect to a SSL VPN using Openconnect

# Define PATH - include .local/bin for installation of openconnect-sso
PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
OPENCONNECT_SSO=$HOME/.local/bin/openconnect-sso

# VPN Variables
HOST="${VPN_HOST:-https://vpn.2ndsiteinc.com/TORVPN}"
VPN_USER="${VPN_USER:-mmazer}"

# Set pidfile
PIDFILE="/var/run/openconnect.pid"

function start() {
    # Check if process is running. Exit in this case.
    [ -f ${PIDFILE} ] && ps -p $(< ${PIDFILE}) &> /dev/null && \
    echo "Openconnect is already running." && exit 0
    
    $OPENCONNECT_SSO -s ${HOST} -- -b --pid-file=${PIDFILE} --syslog
    [ $? -ne 0 ] && echo "Openconnect failed to start!" && \
    rm -f ${PIDFILE} && exit 1
}

function stop() {
    if [ -f ${PIDFILE} ] && ps -p $(< ${PIDFILE}) &> /dev/null; then
        # Pid exists, kill process and remove pidfile
        [ ${UID} -ne 0 ] && echo "You must be root to run this command." && exit 1
        kill $(< ${PIDFILE}) && rm -f ${PIDFILE}
    else
        echo "Openconnect is not running!"
    fi
}

function status() {
    if [ -f ${PIDFILE} ] && ps -p $(< ${PIDFILE}) &> /dev/null; then
        echo "Openconnect is running."
        runningtime=$(ps -p $(< ${PIDFILE}) -o etime=)
        echo "  $(ip addr show tun0 | grep -w inet): ${runningtime}"

    else
        [ -f ${PIDFILE} ] && rm -f ${PIDFILE}
        echo "Openconnect is stopped."
        exit 3
    fi
}

case "$1" in
    start)
start
;;
stop)
stop
;;
status)
status
;;
*)
echo "Usage: ${0##*/} (start|stop|status)" && exit 0
;;
esac
