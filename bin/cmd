#!/bin/bash

name=$(basename $0)
usage () {
    sed -e 's/^//' <<End
Usage: $name [-ld:Dhp] command <args>
shell command runner
-d specify command directory
-D print command directory
-p preview commands
-l list scripts
-h show help
End
    exit 1
}

CMD_LIB="${HOME}/.local/share/shell-commands"
export CMD_LIB

abort() {
    echo "$1"
    exit 1
}

_exit() {
    exit 0
}

assert_file() {
    file=$1
    if [ ! -f "$file" ]; then
        abort "script file not found $file"
    fi
}

list_cmds() {
    find "$CMD_LIB" -type f -printf "%P\n"| sort
}

print_script() {
    file=$(script_path $1)
    assert_file $file
    cat "$file"
}


run_cmd() {
    file=$(cmd_path $1)
    assert_file "$file"
    shift
    . "$file" $*
}

cmd_path() {
    echo "${CMD_LIB}/$1"
}

preview_cmds() {
    [[ "$(command -v fzf)" ]] || { echo "fzf is not installed" 1>&2 ; usage; }
    out=$(fd --base-directory=$CMD_LIB --type f . | sed 's/^.\///' | \
        fzf --preview "cat $CMD_LIB/{}" \
            --preview-window=right:70%:wrap \
            --expect=ctrl-e)
    key=$(head -1 <<< "$out")
    file=$(head -2 <<< "$out" | tail -1)
    case $key in
        ctrl-e)
            edit_cmd $file;;
        *)
            if [ -n "$file" ]; then run_cmd "$file";  fi;;
    esac
}

edit_cmd() {
    file=$(cmd_path $1)
    ${EDITOR:-nvim} "$file"
}

while getopts ld:Dhp opt
do case "$opt" in
    h) usage;;
    d) CMD_LIB="$OPTARG";;
    D) 
      echo  $CMD_LIB
      _exit;;
    p) 
      preview_cmds
      _exit;;
    l) list_cmds && _exit;;
    esac
done
shift $((OPTIND-1))

if [[ ! -d "${CMD_LIB}" ]]; then
    abort "command library not found: $CMD_LIB"
fi

if [ "$#" -eq 0 ]; then
  usage
  return 1
fi

command=$1
shift
run_cmd "$command" "$*"

